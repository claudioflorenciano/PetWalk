/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CtrlCliente;
import controller.CtrlPasseio;
import java.awt.Font;
import java.awt.Image;
import java.net.URL;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.plaf.FontUIResource;
import javax.swing.table.DefaultTableModel;
import model.Animal;
import model.Cliente;
import model.Passeio;
import util.Valida;

/**
 *
 * @author MrMojoBr
 */
public class FrameCliente extends javax.swing.JFrame {
    
    
    private Cliente cliente;
    DefaultTableModel modeloPet = new DefaultTableModel(){

        @Override
        public boolean isCellEditable(int i, int i1) {
            return false; //To change body of generated methods, choose Tools | Templates.
        }
    };
    DefaultTableModel modeloPasseio = new DefaultTableModel(){

        @Override
        public boolean isCellEditable(int i, int i1) {
            return false; //To change body of generated methods, choose Tools | Templates.
        }
    };
    CtrlCliente ctrlCliente = new CtrlCliente();
    CtrlPasseio ctrlPasseio = new CtrlPasseio();
    private int idSelectedPet = -100;
    private boolean idPetSelected = false;
    private int idSelectedPasseio = -100;
    private boolean passeioSelected = false;
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
    
    ImageIcon iconErroTemp = new ImageIcon(getClass().getResource("icon/error.png"));
    ImageIcon iconErro = new ImageIcon(iconErroTemp.getImage().getScaledInstance(35, 35, Image.SCALE_SMOOTH));
    
    ImageIcon iconCheckTemp = new ImageIcon(getClass().getResource("icon/check.png"));
    ImageIcon iconCheck = new ImageIcon(iconCheckTemp.getImage().getScaledInstance(35, 35, Image.SCALE_SMOOTH));
    
    
    
    
    public void setCliente(Cliente cliente){
        this.cliente = cliente;
    }
    
    public Cliente getCliente(){
        return cliente;
    }
    
    List<Animal> pets;
    List<Passeio> passeios;
            
    public void formataFrame(){
        jLabelClienteNome.setText(cliente.getNome());
        

        
        pets = ctrlCliente.pesquisaAnimais(cliente.getId_cliente());
        
        
        //exibe pets
        modeloPet.setColumnIdentifiers(new String[] {
            "Nome","Raça","Idade"});
        modeloPet.setRowCount(0);
        if(!pets.isEmpty()){
            for(Animal p: pets){
                modeloPet.addRow(new Object[]{
                    p.getNome(),
                    p.getRaca(),
                    p.getIdade()
                });
            }
        }
        
        jTableClientePet.setModel(modeloPet);
        
        passeios = ctrlPasseio.pesquisaPasseio(cliente);
        
        //exibe passeios
        modeloPasseio.setColumnIdentifiers(new String[] {
            "Pet","Preço","Data"});
        modeloPasseio.setRowCount(0);
        if(!passeios.isEmpty()){
            for(Passeio p: passeios){
                p.setAnimal(ctrlCliente.pesquisaAnimal(p.getCliente().getId_cliente(), p.getAnimal().getId_animal()));
                modeloPasseio.addRow(new Object[]{
                    p.getAnimal().getNome(),
                    p.getPrecoPasseio(),
                    p.getAgendamentoPasseio().format(formatter)
                });
            }
        }
        
        jTableClientePasseio.setModel(modeloPasseio);
    }

    /**
     * Creates new form FrameCliente
     * @param cliente
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public FrameCliente(Cliente cliente) {
        this.cliente = cliente;
        initComponents();
        formataFrame();
        
        URL iconURL = getClass().getResource("icon/petIcon.png");

        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font("Tahoma", Font.PLAIN, 14)));
    }
    
    public FrameCliente(){
        initComponents();
        
        URL iconURL = getClass().getResource("icon/petIcon.png");

        ImageIcon icon = new ImageIcon(iconURL);
        this.setIconImage(icon.getImage());
        
        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font("Tahoma", Font.PLAIN, 14)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelClienteNome = new javax.swing.JLabel();
        jButtonClienteDeslogar = new javax.swing.JButton();
        jLabelClientePet = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientePet = new javax.swing.JTable();
        jButtonClienteBuscaPro = new javax.swing.JButton();
        jButtonClienteCadPet = new javax.swing.JButton();
        jLabelClientePasseio = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableClientePasseio = new javax.swing.JTable();
        jButtonPetDied = new javax.swing.JButton();
        jButtonClienteAvalia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PetWalk");
        setLocation(new java.awt.Point(500, 200));
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabelClienteNome.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabelClienteNome.setText("Nome Cliente");

        jButtonClienteDeslogar.setText("Deslogar");
        jButtonClienteDeslogar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClienteDeslogarMouseClicked(evt);
            }
        });

        jLabelClientePet.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelClientePet.setText("Pets:");

        jTableClientePet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Raca", "Idade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClientePet.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableClientePet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientePetMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClientePet);

        jButtonClienteBuscaPro.setText("Buscar Passeadores");
        jButtonClienteBuscaPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClienteBuscaProMouseClicked(evt);
            }
        });

        jButtonClienteCadPet.setText("Cadastrar Pet");
        jButtonClienteCadPet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClienteCadPetMouseClicked(evt);
            }
        });

        jLabelClientePasseio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelClientePasseio.setText("Passeios:");

        jTableClientePasseio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Pet", "Preço", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClientePasseio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientePasseioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableClientePasseio);

        jButtonPetDied.setText("Falecimento de Pet");
        jButtonPetDied.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPetDiedMouseClicked(evt);
            }
        });

        jButtonClienteAvalia.setText("Avaliar Passeio");
        jButtonClienteAvalia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClienteAvaliaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelClientePet)
                            .addComponent(jLabelClientePasseio)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonClienteBuscaPro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonClienteCadPet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonPetDied, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonClienteAvalia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 177, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelClienteNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonClienteDeslogar)
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClienteNome)
                    .addComponent(jButtonClienteDeslogar))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClienteBuscaPro)
                    .addComponent(jButtonClienteAvalia))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClienteCadPet)
                    .addComponent(jButtonPetDied))
                .addGap(34, 34, 34)
                .addComponent(jLabelClientePet)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelClientePasseio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonClienteDeslogarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClienteDeslogarMouseClicked
        // TODO add your handling code here:
        
        FrameLogin fLogin = new FrameLogin();
        fLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonClienteDeslogarMouseClicked

    private void jButtonClienteCadPetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClienteCadPetMouseClicked
        // TODO add your handling code here:
        //cadastrar pet
        CadastroPet cadPet = new CadastroPet(cliente.getId_cliente());
        cadPet.setVisible(true);
        
        
    }//GEN-LAST:event_jButtonClienteCadPetMouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        formataFrame();
        
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButtonPetDiedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPetDiedMouseClicked
        // TODO add your handling code here:
        //morte de pet
        if(idSelectedPet >= 0){
            Animal ani = pets.get(jTableClientePet.getSelectedRow());
            String data = JOptionPane.showInputDialog(this, "Informe a data de falecimento do pet "+ ani.getNome(), "Falecimento do Pet", JOptionPane.INFORMATION_MESSAGE);
        
            if(!data.contains("/")){
                try{
                    data = data.substring(0, 2) + "/" + data.substring(3, 5) + "/" + data.substring(6);
                }catch(Exception e){
                    
                }
            }

            try{
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                LocalDate date = LocalDate.parse(data, formatter);
            
                
                ani.setData_obito(date.toString());
                
                Valida valida = new Valida();
                if(valida.validaDataObitoPet(ani.getData_nascimento(), ani.getData_obito())){
                    if(ctrlCliente.mortePet(cliente, ani)){

                        JOptionPane.showMessageDialog(this, "Atualização efetuada!", "Atualizado!",  JOptionPane.WIDTH, iconCheck);
                    
                    }else{
                        JOptionPane.showMessageDialog(this, "Erro na atualização!", "Aviso!",  JOptionPane.WIDTH, iconErro);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Data de óbito inválida!\nData: "+ data, "Aviso!", JOptionPane.WIDTH, iconErro);
                }
            }catch(DateTimeParseException e){
                JOptionPane.showMessageDialog(this, "Data inválida!\nData: "+ data, "Aviso!", JOptionPane.WIDTH, iconErro);
            }

        }else{
            JOptionPane.showMessageDialog(this, "Selecione um pet primeiro!", "Aviso!", JOptionPane.WIDTH, iconErro);
        }
        
    }//GEN-LAST:event_jButtonPetDiedMouseClicked

    private void jTableClientePetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientePetMouseClicked
        // TODO add your handling code here:

        idSelectedPet = pets.get(jTableClientePet.getSelectedRow()).getId_animal();
        idPetSelected = true;
        
        
    }//GEN-LAST:event_jTableClientePetMouseClicked

    private void jButtonClienteBuscaProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClienteBuscaProMouseClicked
        // TODO add your handling code here:
        // abre a busca de passeadores 
        if(pets.size() <= 0){
            
            JOptionPane.showMessageDialog(this, "Você não cadastrou nenhum pet!", "Aviso!", JOptionPane.WIDTH, iconErro);
        }else{
            FrameBuscaPasseador frameBuscaPasseador = new FrameBuscaPasseador(cliente);
            frameBuscaPasseador.setVisible(true);
        }
    }//GEN-LAST:event_jButtonClienteBuscaProMouseClicked

    private void jButtonClienteAvaliaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonClienteAvaliaMouseClicked
        // TODO add your handling code here:
        //avalia passeio
        if(idSelectedPasseio >= 0){
            Passeio p = passeios.get(jTableClientePasseio.getSelectedRow());
            String nota = JOptionPane.showInputDialog(this, "Informe uma nota de 0 a 10 do passeio de "+ p.getAnimal().getNome(), "Avaliação", JOptionPane.INFORMATION_MESSAGE);

            
            if(Valida.verificaNota(nota)){
                int n = Integer.parseInt(nota);
                if((n>=0) && (n<=10)){
                    p.setAvaliacao(n);
                    
                    if(ctrlPasseio.avaliacao(p)){
                        
                        
                        JOptionPane.showMessageDialog(this, "Passeio avaliado!", "Avaliado!", JOptionPane.WIDTH, iconCheck);

                    }else{
                        JOptionPane.showMessageDialog(this, "Ocorreu um erro!", "Aviso!", JOptionPane.WIDTH, iconErro);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Por favor insira uma nota valida!", "Aviso!", JOptionPane.WIDTH, iconErro);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Por favor insira uma nota valida!", "Aviso!", JOptionPane.WIDTH, iconErro);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Selecione um passeio primeiro!", "Aviso!", JOptionPane.WIDTH, iconErro);
        }
    }//GEN-LAST:event_jButtonClienteAvaliaMouseClicked

    private void jTableClientePasseioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientePasseioMouseClicked
        // TODO add your handling code here:
        idSelectedPasseio = passeios.get(jTableClientePasseio.getSelectedRow()).getIdPasseio();
        passeioSelected = true;
    }//GEN-LAST:event_jTableClientePasseioMouseClicked

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClienteAvalia;
    private javax.swing.JButton jButtonClienteBuscaPro;
    private javax.swing.JButton jButtonClienteCadPet;
    private javax.swing.JButton jButtonClienteDeslogar;
    private javax.swing.JButton jButtonPetDied;
    private javax.swing.JLabel jLabelClienteNome;
    private javax.swing.JLabel jLabelClientePasseio;
    private javax.swing.JLabel jLabelClientePet;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableClientePasseio;
    private javax.swing.JTable jTableClientePet;
    // End of variables declaration//GEN-END:variables
}
